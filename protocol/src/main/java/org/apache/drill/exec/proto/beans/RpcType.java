/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from protobuf

package org.apache.drill.exec.proto.beans;

public enum RpcType implements com.dyuproject.protostuff.EnumLite<RpcType>
{
    HANDSHAKE(0),
    ACK(1),
    GOODBYE(2),
    REQ_INITIALIZE_FRAGMENTS(3),
    REQ_CANCEL_FRAGMENT(6),
    REQ_RECEIVER_FINISHED(7),
    REQ_FRAGMENT_STATUS(8),
    REQ_BIT_STATUS(9),
    REQ_QUERY_STATUS(10),
    REQ_QUERY_CANCEL(15),
    REQ_UNPAUSE_FRAGMENT(16),
    REQ_CUSTOM(17),
    RESP_FRAGMENT_HANDLE(11),
    RESP_FRAGMENT_STATUS(12),
    RESP_BIT_STATUS(13),
    RESP_QUERY_STATUS(14),
    RESP_CUSTOM(18),
    SASL_MESSAGE(19);
    
    public final int number;
    
    private RpcType (int number)
    {
        this.number = number;
    }
    
    public int getNumber()
    {
        return number;
    }
    
    public static RpcType valueOf(int number)
    {
        switch(number) 
        {
            case 0: return HANDSHAKE;
            case 1: return ACK;
            case 2: return GOODBYE;
            case 3: return REQ_INITIALIZE_FRAGMENTS;
            case 6: return REQ_CANCEL_FRAGMENT;
            case 7: return REQ_RECEIVER_FINISHED;
            case 8: return REQ_FRAGMENT_STATUS;
            case 9: return REQ_BIT_STATUS;
            case 10: return REQ_QUERY_STATUS;
            case 11: return RESP_FRAGMENT_HANDLE;
            case 12: return RESP_FRAGMENT_STATUS;
            case 13: return RESP_BIT_STATUS;
            case 14: return RESP_QUERY_STATUS;
            case 15: return REQ_QUERY_CANCEL;
            case 16: return REQ_UNPAUSE_FRAGMENT;
            case 17: return REQ_CUSTOM;
            case 18: return RESP_CUSTOM;
            case 19: return SASL_MESSAGE;
            default: return null;
        }
    }
}
